import numpy as np

def first_nonzero(arr, axis, invalid_val=-1):
    mask = arr!=0
    return np.where(mask.any(axis=axis), mask.argmax(axis=axis), invalid_val)

def last_nonzero(arr, axis, invalid_val=-1):
    mask = arr!=0
    val = arr.shape[axis] - np.flip(mask, axis=axis).argmax(axis=axis) - 1
    return np.where(mask.any(axis=axis), val, invalid_val)

arr=np.array([[0,0,0,0],[0,1,1,0],[0,0,1,0],[0,0,0,0]])

a = first_nonzero(arr, axis=1, invalid_val=-1)

b = last_nonzero(arr, axis=1, invalid_val=-1)

print(a,b)
import math
for idx, x in np.ndenumerate(a):
    if x>-1:
        print(idx[0],x,b[idx])
        xval = math.floor(((x + b[idx]) / 2))
        yval = idx[0]
        print(xval,yval)
        break;